Index: app/src/main/java/com/aviro/android/presentation/review/CustomGallery.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aviro.android.presentation.review\n\nimport android.app.Activity\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.viewModels\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.aspectRatio\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.foundation.lazy.grid.GridCells\nimport androidx.compose.foundation.lazy.grid.LazyHorizontalGrid\nimport androidx.compose.foundation.lazy.grid.LazyVerticalGrid\nimport androidx.compose.material3.Card\nimport androidx.compose.material3.CardDefaults\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.Surface\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.aviro.android.R\nimport com.aviro.android.core.designsystem.Typographys\n\nclass CustomGallery : ComponentActivity() {\n\n    // 권한\n\n    // 뷰모델\n    private val viewmodel : ReviewWritingViewModel by viewModels()\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        setContent {\n            Surface {\n                galleryScreen()\n            }\n        }\n\n    }\n}\n\n\n@Preview(showBackground = false)\n@Composable\nfun galleryScreenPreview() {\n    Surface(\n    ) {\n        galleryScreen()\n    }\n}\n\n\n\n@Composable\nfun galleryScreen() {\n    Column(modifier = Modifier\n        .fillMaxSize(),\n        verticalArrangement = Arrangement.SpaceBetween\n    ) {\n        // toolbar (뒤로가기, 앨범 선택, 선택완료)\n        Box(\n            modifier = Modifier\n                .fillMaxWidth()\n                .height(60.dp)\n                .padding(start = 16.dp, end = 16.dp)\n        )\n        {\n            Row(\n                modifier = Modifier\n                    .padding(top = 18.dp),\n                horizontalArrangement = Arrangement.SpaceBetween\n            ) {\n                Box( modifier = Modifier.weight(1f) ){\n                    // 닫기 버튼\n                    IconButton(modifier = Modifier\n                        .width(24.dp)\n                        .height(24.dp),\n                        onClick = { /* ((context as Activity).finish()) */ }) {\n\n                        Icon(\n                            painter = painterResource(id = R.drawable.ic_arrow_left),\n                            contentDescription = \"뒤로가기\"\n                        )\n                    }\n                }\n\n                // 앨범 이름\n                Box( modifier = Modifier.weight(1f), // 가운데 박스\n                    contentAlignment = Alignment.Center) { // 가운데 텍스트를 정렬\n\n                    Row {\n\n                        Text(\n                            text = \"전체\",\n                            //textAlign = TextAlign.Center,\n                            color = colorResource(R.color.Gray_800),\n                            style = Typographys.BodyLarge.Strong\n                        )\n\n                        Icon(modifier = Modifier\n                            .width(20.dp)\n                            .height(20.dp)\n                            .padding(start = 4.dp),\n                            painter = painterResource(id = R.drawable.ic_arrow_down),\n                            contentDescription = \"앨범 선택하기\"\n                        )\n                    }\n\n                }\n\n                // 선택 완료 버튼\n                Box( modifier = Modifier.weight(1f), // 우측 박스\n                    contentAlignment = Alignment.CenterEnd // 우측 정렬\n                ) {\n                    Row {\n                        Text(\n                            text = \"3\",\n                            modifier = Modifier\n                                .padding(end = 3.dp),\n                            color = colorResource(R.color.Blue_Primary),\n                            style = Typographys.BodyLarge.Strong\n                        )\n\n                        Text(\n                            text = \"선택\",\n                            color = colorResource(R.color.Base_Black),\n                            style = Typographys.BodyLarge.Strong\n                        )\n                    }\n                }\n            }\n        }\n\n        // 이미지 grid\n        // 이미지 클릭시 선택된 번호 -> 뷰모델로 이동\n        val items = (1..50).toList() // 예제 데이터를 위한 리스트\n\n        LazyVerticalGrid(\n            modifier = Modifier\n                .fillMaxSize()\n                .padding(start = 16.dp, end = 16.dp, top = 20.dp),\n            columns = GridCells.Fixed(3),\n            horizontalArrangement = Arrangement.spacedBy(12.dp),\n            verticalArrangement = Arrangement.spacedBy(12.dp),\n\n        ) {\n\n            getImagesFromInternal() // 이미지 가져오기 // 어떤 앨범인지에 따라 다름\n            // 이미지 표시\n            // 각 이미지 아이템 클릭시, 동작 구현\n            // 이미지 리스트에 uri, 순서 저장\n            // 이미지에 순서 표시 뜸\n\n\n\n\n            items(items.size) { item ->\n                Box(\n                    modifier = Modifier\n                        .aspectRatio(1f) // 정사각형 모양 유지\n                        .background(Color.LightGray)\n                ) {\n                    Card (\n                        colors = CardDefaults.cardColors(\n                            containerColor = colorResource(R.color.Gray_600)\n                        )\n                    ) {\n\n                    }\n                }\n            }\n        }\n    }\n\n\n}\n\nfun getImagesFromInternal() {\n    // 이미지 가져오기\n    // galleryScreen에 셋팅 // Paging, 캐싱 필수\n\n}\n\n\nfun checkPermission() {\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/aviro/android/presentation/review/CustomGallery.kt b/app/src/main/java/com/aviro/android/presentation/review/CustomGallery.kt
--- a/app/src/main/java/com/aviro/android/presentation/review/CustomGallery.kt	(revision 28320b966ce4f595940a556f3da946344509aa91)
+++ b/app/src/main/java/com/aviro/android/presentation/review/CustomGallery.kt	(date 1737905334209)
@@ -170,8 +170,6 @@
             // 이미지에 순서 표시 뜸
 
 
-
-
             items(items.size) { item ->
                 Box(
                     modifier = Modifier
